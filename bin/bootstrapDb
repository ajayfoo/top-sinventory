#!/usr/bin/env node

import {dbPool } from '../db.js'
import bcrypt from 'bcrypt'


const bootstrapDb=async()=>{
  const demoUsername="demo";
  const demoUserPassword="demo";
  const encryptedPassword=await bcrypt.hash(demoUserPassword,10);
  try{
    await dbPool.query("CREATE TABLE users(id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, username TEXT UNIQUE NOT NULL, password TEXT NOT NULL)"),
    await dbPool.query("INSERT INTO users(username, password) VALUES($1, $2)",[demoUsername,encryptedPassword])

    await dbPool.query(`
      CREATE TABLE "session" (
      "sid" varchar NOT NULL COLLATE "default",
      "sess" json NOT NULL,
      "expire" timestamp(6) NOT NULL
      ) WITH (OIDS=FALSE)  
      `);
    await dbPool.query(`
        ALTER TABLE "session" ADD CONSTRAINT "session_pkey" PRIMARY KEY ("sid") NOT DEFERRABLE INITIALLY IMMEDIATE
        `);
    await dbPool.query(`CREATE INDEX "IDX_session_expire" ON "session" ("expire")`);
    await dbPool.query(`CREATE TABLE categories(id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
      name TEXT NOT NULL,
      description TEXT NOT NULL,
      url TEXT)`);
    await dbPool.query(`CREATE TABLE instruments(id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
       name TEXT NOT NULL,
       count INT NOT NULL,
       price DECIMAL,
       description TEXT NOT NULL,
       img_url TEXT,
       url TEXT,
       category_id INT REFERENCES categories(id))`);
    console.log('Database bootstrapped successfully.');
    console.log('Demo username: '+demoUsername);
    console.log('Demo user password: '+demoUserPassword);
    console.log("Please wait...")
  }catch(err){
    console.error(err)
  }
}

bootstrapDb();